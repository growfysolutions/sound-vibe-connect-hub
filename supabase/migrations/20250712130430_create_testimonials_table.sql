CREATE TABLE public.testimonials (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  author_id UUID NOT NULL REFERENCES public.profiles(id),
  recipient_id UUID NOT NULL REFERENCES public.profiles(id),
  content TEXT NOT NULL,
  status TEXT NOT NULL DEFAULT 'pending', -- pending, approved, rejected
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  CONSTRAINT check_author_recipient CHECK (author_id <> recipient_id)
);

ALTER TABLE public.testimonials ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view approved testimonials" ON public.testimonials
FOR SELECT USING (status = 'approved');

CREATE POLICY "Users can view their own pending testimonials" ON public.testimonials
FOR SELECT USING (recipient_id = auth.uid());

CREATE POLICY "Users can insert testimonials for others" ON public.testimonials
FOR INSERT WITH CHECK (author_id = auth.uid() AND author_id <> recipient_id);

CREATE POLICY "Users can update their own pending testimonials" ON public.testimonials
FOR UPDATE USING (recipient_id = auth.uid() AND status = 'pending');
